function main() {
    // Name property (required)
    const nameProp = new PropBuilder()
        .setName("name")
        .setKind("string")
        .setHidden(false)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .setCreateOnly()
            .build())
        .setValidationFormat(Joi.string().required().max(175))
        .setDocumentation("The human-readable name for the project. The maximum length is 175 characters and the name must be unique.")
        .build();

    // Description property
    const descriptionProp = new PropBuilder()
        .setName("description")
        .setKind("string")
        .setHidden(false)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("textArea")
            .build())
        .setValidationFormat(Joi.string().max(255))
        .setDocumentation("The description of the project. The maximum length is 255 characters.")
        .build();

    // Purpose property (required)
    const purposeProp = new PropBuilder()
        .setName("purpose")
        .setKind("string")
        .setHidden(false)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("comboBox")
            .addOption("Just trying out DigitalOcean", "Just trying out DigitalOcean")
            .addOption("Class project / Educational purposes", "Class project / Educational purposes")
            .addOption("Website or blog", "Website or blog")
            .addOption("Web Application", "Web Application")
            .addOption("Service or API", "Service or API")
            .addOption("Mobile Application", "Mobile Application")
            .addOption("Machine learning / AI / Data processing", "Machine learning / AI / Data processing")
            .addOption("IoT", "IoT")
            .addOption("Operational / Developer tooling", "Operational / Developer tooling")
            .setCreateOnly()
            .build())
        .setValidationFormat(Joi.string().required().max(255))
        .setDocumentation("The purpose of the project. The maximum length is 255 characters. It can have one of the following values: Just trying out DigitalOcean, Class project / Educational purposes, Website or blog, Web Application, Service or API, Mobile Application, Machine learning / AI / Data processing, IoT, Operational / Developer tooling. If another value for purpose is specified, for example, 'your custom purpose', your purpose will be stored as 'Other: your custom purpose'.")
        .build();

    // Environment property
    const environmentProp = new PropBuilder()
        .setName("environment")
        .setKind("string")
        .setHidden(false)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("comboBox")
            .addOption("Development", "Development")
            .addOption("Staging", "Staging")
            .addOption("Production", "Production")
            .build())
        .setValidationFormat(Joi.string().valid("Development", "Staging", "Production"))
        .setDocumentation("The environment of the project's resources.")
        .build();

    // ID property (read-only)
    const idProp = new PropBuilder()
        .setName("id")
        .setKind("string")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .build())
        .setValidationFormat(Joi.string().uuid())
        .setDocumentation("The unique universal identifier of this project.")
        .build();

    // Owner UUID property (read-only)
    const ownerUuidProp = new PropBuilder()
        .setName("owner_uuid")
        .setKind("string")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .build())
        .setValidationFormat(Joi.string())
        .setDocumentation("The unique universal identifier of the project owner.")
        .build();

    // Owner ID property (read-only)
    const ownerIdProp = new PropBuilder()
        .setName("owner_id")
        .setKind("float")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .build())
        .setValidationFormat(Joi.number().integer())
        .setDocumentation("The integer id of the project owner.")
        .build();

    // Created at property (read-only)
    const createdAtProp = new PropBuilder()
        .setName("created_at")
        .setKind("string")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .build())
        .setValidationFormat(Joi.string())
        .setDocumentation("A time value given in ISO8601 combined date and time format that represents when the project was created.")
        .build();

    // Updated at property (read-only)
    const updatedAtProp = new PropBuilder()
        .setName("updated_at")
        .setKind("string")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("text")
            .build())
        .setValidationFormat(Joi.string())
        .setDocumentation("A time value given in ISO8601 combined date and time format that represents when the project was updated.")
        .build();

    // Is default property (read-only)
    const isDefaultProp = new PropBuilder()
        .setName("is_default")
        .setKind("boolean")
        .setHidden(true)
        .setWidget(new PropWidgetDefinitionBuilder()
            .setKind("checkbox")
            .build())
        .setValidationFormat(Joi.boolean())
        .setDocumentation("If true, all resources will be added to this project if no project is specified.")
        .build();

    // Create the asset
    const asset = new AssetBuilder()
        .addProp(nameProp)
        .addProp(descriptionProp)
        .addProp(purposeProp)
        .addProp(environmentProp)
        .addProp(idProp)
        .addProp(ownerUuidProp)
        .addProp(ownerIdProp)
        .addProp(createdAtProp)
        .addProp(updatedAtProp)
        .addProp(isDefaultProp)
        .build();

    return asset;
}